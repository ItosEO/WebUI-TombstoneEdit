class e{constructor(){this.configDefinitions=this.initializeConfigDefinitions()}initializeConfigDefinitions(){return{enableConfig:{title:"基础开关",description:"控制墓碑机制的基础功能开关",type:"group",items:{hansEnable:{title:"启用全局墓碑机制",description:"控制整个墓碑系统的总开关",type:"boolean",default:"true"},gmsEnable:{title:"GMS应用优化",description:"对Google移动服务(GMS)应用启用优化",type:"boolean",default:"true"},releaseStatistic:{title:"释放统计信息",description:"收集并释放统计信息",type:"boolean",default:"true"},skipToast:{title:"跳过Toast通知",description:"冻结时跳过Toast通知避免唤醒",type:"boolean",default:"true"},heatGameCloseNet:{title:"高温游戏断网",description:"高温时是否关闭游戏网络",type:"boolean",default:"false"},dozeRestrictSwitch:{title:"Doze模式限制",description:"在Doze模式下启用限制开关",type:"boolean",default:"true"},audioByHook:{title:"音频钩子拦截",description:"通过钩子拦截音频事件减少唤醒",type:"boolean",default:"true"},navigationByHook:{title:"导航钩子拦截",description:"通过钩子拦截导航事件减少唤醒",type:"boolean",default:"true"},audioCheckEnable:{title:"音频状态检查",description:"启用音频状态检查",type:"boolean",default:"true"},proxyWakeLockEnable:{title:"WakeLock代理",description:"启用WakeLock代理机制",type:"boolean",default:"true"},cgp_v2:{title:"CGP v2",description:"使用第二代CGP功耗策略",type:"boolean",default:"true"},hansWatchDogEnable:{title:"墓碑看门狗",description:"启用墓碑看门狗监控",type:"boolean",default:"true"},cpnCheckByHook:{title:"组件钩子检查",description:"通过钩子检查组件状态",type:"boolean",default:"true"},restoreAlarm:{title:"恢复闹钟",description:"解冻时恢复闹钟功能",type:"boolean",default:"true"},uidGoneRemoveAlarm:{title:"卸载移除闹钟",description:"应用卸载时移除关联闹钟",type:"boolean",default:"true"},MStateTrimMemConfig:{title:"M状态内存压缩",description:"对M状态应用启用内存压缩",type:"boolean",default:"true"}}},lcdOffConfig:{title:"熄屏配置",description:"屏幕关闭时的墓碑策略",type:"group",items:{ffTotal:{title:"每次冻结数量",description:"每次冻结的最大应用数",type:"number",default:"6",min:1,max:50,unit:"个"},ffInterval:{title:"冻结间隔",description:"冻结尝试间隔时间",type:"number",default:"10000",min:1e3,max:6e4,unit:"毫秒"},interval:{title:"检查间隔",description:"常规检查间隔时间",type:"number",default:"60000",min:1e4,max:3e5,unit:"毫秒"},deepSleepFreezeWhite:{title:"深度睡眠冻结白名单",description:"深度睡眠时冻结白名单应用",type:"boolean",default:"true"},gameCloseNet:{title:"游戏断网",description:"熄屏时是否关闭游戏网络",type:"boolean",default:"false"},idleEnable:{title:"空闲检测",description:"启用空闲状态检测",type:"boolean",default:"true"}}},lcdOnConfig:{title:"亮屏配置",description:"屏幕开启时的墓碑策略",type:"group",items:{RToM:{title:"Recent→M延迟",description:"Recent状态到M状态的冻结延迟",type:"number",default:"20000",min:5e3,max:6e4,unit:"毫秒"},MToF:{title:"M→Frozen延迟",description:"M状态到Frozen状态的冻结延迟",type:"number",default:"10000",min:2e3,max:3e4,unit:"毫秒"},checkImportance:{title:"重要性检查间隔",description:"应用重要性检查间隔",type:"number",default:"15000",min:5e3,max:6e4,unit:"毫秒"},gameCloseNet:{title:"游戏断网",description:"亮屏时是否关闭游戏网络",type:"boolean",default:"false"}}},ffConfig:{title:"快速冻结配置",description:"快速冻结机制的相关设置",type:"group",items:{enable:{title:"启用快速冻结",description:"是否启用快速冻结功能",type:"boolean",default:"true"},enterTimeout:{title:"进入超时",description:"进入冻结状态的超时时间",type:"number",default:"100",min:50,max:1e3,unit:"毫秒"},interval:{title:"冻结周期",description:"快速冻结的执行周期",type:"number",default:"10000",min:5e3,max:3e4,unit:"毫秒"},maxFzNum:{title:"最大冻结数",description:"单批次最大冻结应用数量",type:"number",default:"10",min:1,max:50,unit:"个"}}}}}updateValue(e,t,i){try{let n=t.split("."),r=e;for(let e=0;e<n.length-1;e++){let i=n[e];if(r.children){let e=r.children.find(e=>e.tagName===i);e||(e={tagName:i,attributes:{},children:[],textContent:""},r.children.push(e)),r=e}else throw Error(`\u{65E0}\u{6548}\u{7684}\u{914D}\u{7F6E}\u{8DEF}\u{5F84}: ${t}`)}let s=n[n.length-1];if(r.attributes)r.attributes[s]=String(i),console.log(`\u{914D}\u{7F6E}\u{5DF2}\u{66F4}\u{65B0}: ${t} = ${i}`);else throw Error(`\u{65E0}\u{6CD5}\u{8BBE}\u{7F6E}\u{914D}\u{7F6E}\u{503C}: ${t}`)}catch(e){throw console.error("更新配置值失败:",e),e}}getValue(e,t){try{let i=t.split("."),n=e;for(let e of i)if(n.children){let t=n.children.find(t=>t.tagName===e);if(t)n=t;else if(n.attributes&&void 0!==n.attributes[e])return n.attributes[e];else return}else if(n.attributes&&void 0!==n.attributes[e])return n.attributes[e];else return;return n}catch(e){console.error("获取配置值失败:",e);return}}getConfigDefinition(e){return this.configDefinitions[e]||null}getAllSections(){return Object.keys(this.configDefinitions)}validateValue(e,t,i){let n=this.configDefinitions[e];if(!n||!n.items||!n.items[t])return{isValid:!1,error:"未知的配置项"};let r=n.items[t];switch(r.type){case"boolean":if("true"!==i&&"false"!==i)return{isValid:!1,error:"值必须是true或false"};break;case"number":let s=parseInt(i);if(isNaN(s))return{isValid:!1,error:"值必须是数字"};if(void 0!==r.min&&s<r.min)return{isValid:!1,error:`\u{503C}\u{4E0D}\u{80FD}\u{5C0F}\u{4E8E}${r.min}`};if(void 0!==r.max&&s>r.max)return{isValid:!1,error:`\u{503C}\u{4E0D}\u{80FD}\u{5927}\u{4E8E}${r.max}`};break;case"string":if("string"!=typeof i)return{isValid:!1,error:"值必须是字符串"}}return{isValid:!0}}resetToDefault(e,t,i){let n=this.configDefinitions[t];if(n&&n.items&&n.items[i]){let r=n.items[i].default;void 0!==r&&this.updateValue(e,`${t}.${i}`,r)}}resetSectionToDefault(e,t){let i=this.configDefinitions[t];if(i&&i.items)for(let[n,r]of Object.entries(i.items))void 0!==r.default&&this.updateValue(e,`${t}.${n}`,r.default)}}let t=0;function i(e,i){return void 0===i&&(i={}),new Promise((n,r)=>{let s=`exec_callback_${Date.now()}_${t++}`;function a(e){delete window[e]}window[s]=(e,t,i)=>{n({errno:e,stdout:t,stderr:i}),a(s)};try{ksu.exec(e,JSON.stringify(i),s)}catch(e){r(e),a(s)}})}function n(){this.listeners={}}function r(){this.listeners={},this.stdin=new n,this.stdout=new n,this.stderr=new n}n.prototype.on=function(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t)},n.prototype.emit=function(e,...t){this.listeners[e]&&this.listeners[e].forEach(e=>e(...t))},r.prototype.on=function(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t)},r.prototype.emit=function(e,...t){this.listeners[e]&&this.listeners[e].forEach(e=>e(...t))};class s{constructor(){this.configPath="/data/oplus/os/bpm/sys_elsa_config_list.xml",this.backupDir="/data/local/tmp/tombstone_backups",this.tempDir="/data/local/tmp/tombstone_temp",this.initializeDirectories()}async initializeDirectories(){try{await i(`mkdir -p "${this.backupDir}"`),await i(`mkdir -p "${this.tempDir}"`),await i(`chmod 755 "${this.backupDir}"`),await i(`chmod 755 "${this.tempDir}"`),console.log("目录初始化完成")}catch(e){console.warn("目录初始化警告:",e.message)}}async checkAPIAvailable(){try{let e=await i('echo "test"');return 0===e.errno}catch(e){return console.error("KernelSU API检查失败:",e),!1}}async checkConfigFileExists(){try{let e=await i(`test -f "${this.configPath}"`);return 0===e.errno}catch(e){return!1}}async readConfigFile(){try{if(!await this.checkConfigFileExists())throw Error(`\u{914D}\u{7F6E}\u{6587}\u{4EF6}\u{4E0D}\u{5B58}\u{5728}: ${this.configPath}`);let e=await i(`cat "${this.configPath}"`);if(0!==e.errno)throw Error(`\u{8BFB}\u{53D6}\u{6587}\u{4EF6}\u{5931}\u{8D25}: ${e.stderr||"未知错误"}`);if(!e.stdout||0===e.stdout.trim().length)throw Error("配置文件为空");return console.log("配置文件读取成功"),e.stdout}catch(e){throw console.error("读取配置文件失败:",e),Error(`\u{8BFB}\u{53D6}\u{914D}\u{7F6E}\u{6587}\u{4EF6}\u{5931}\u{8D25}: ${e.message}`)}}async writeConfigFile(e){try{if(!e||0===e.trim().length)throw Error("配置内容不能为空");let t=`${this.tempDir}/config_temp_${Date.now()}.xml`,n=e.replace(/'/g,"'\"'\"'"),r=await i(`echo '${n}' > "${t}"`);if(0!==r.errno)throw Error(`\u{5199}\u{5165}\u{4E34}\u{65F6}\u{6587}\u{4EF6}\u{5931}\u{8D25}: ${r.stderr}`);let s=await i(`test -f "${t}" && test -s "${t}"`);if(0!==s.errno)throw Error("临时文件验证失败");let a=await i(`cp "${t}" "${this.configPath}"`);if(0!==a.errno)throw Error(`\u{590D}\u{5236}\u{6587}\u{4EF6}\u{5931}\u{8D25}: ${a.stderr}`);await i(`chmod 644 "${this.configPath}"`),await i(`chown system:system "${this.configPath}"`),await i(`rm -f "${t}"`),console.log("配置文件写入成功")}catch(e){throw console.error("写入配置文件失败:",e),Error(`\u{5199}\u{5165}\u{914D}\u{7F6E}\u{6587}\u{4EF6}\u{5931}\u{8D25}: ${e.message}`)}}async createBackup(){try{if(!await this.checkConfigFileExists())throw Error("原配置文件不存在，无法创建备份");let e=new Date().toISOString().replace(/[:.]/g,"-"),t=`${this.backupDir}/sys_elsa_config_list_${e}.xml`,n=await i(`cp "${this.configPath}" "${t}"`);if(0!==n.errno)throw Error(`\u{521B}\u{5EFA}\u{5907}\u{4EFD}\u{5931}\u{8D25}: ${n.stderr}`);return await i(`chmod 644 "${t}"`),await this.cleanOldBackups(),console.log(`\u{5907}\u{4EFD}\u{521B}\u{5EFA}\u{6210}\u{529F}: ${t}`),t}catch(e){throw console.error("创建备份失败:",e),Error(`\u{521B}\u{5EFA}\u{5907}\u{4EFD}\u{5931}\u{8D25}: ${e.message}`)}}async getBackupList(){try{let e=await i(`ls -la "${this.backupDir}"/sys_elsa_config_list_*.xml 2>/dev/null || true`);if(0!==e.errno||!e.stdout.trim())return[];let t=[];for(let i of e.stdout.trim().split("\n"))if(i.includes("sys_elsa_config_list_")){let e=i.split(/\s+/),n=e[e.length-1];n=n.split("/").pop();let r=`${this.backupDir}/${n}`,s=n.match(/sys_elsa_config_list_(.+)\.xml/);if(s){let i=s[1].replace(/-/g,":");t.push({path:r,filename:n,timestamp:i,size:e[4],date:`${e[5]} ${e[6]} ${e[7]}`})}}return t.sort((e,t)=>t.timestamp.localeCompare(e.timestamp)),t}catch(e){return console.error("获取备份列表失败:",e),[]}}async restoreBackup(e=null){try{let t=e;if(!t){let e=await this.getBackupList();if(0===e.length)throw Error("没有找到可用的备份文件");t=e[0].path}let n=await i(`test -f "${t}"`);if(0!==n.errno)throw Error(`\u{5907}\u{4EFD}\u{6587}\u{4EF6}\u{4E0D}\u{5B58}\u{5728}: ${t}`);let r=await i(`head -1 "${t}"`);if(0!==r.errno||!r.stdout.includes("<?xml"))throw Error("备份文件格式无效");let s=await i(`cp "${t}" "${this.configPath}"`);if(0!==s.errno)throw Error(`\u{6062}\u{590D}\u{6587}\u{4EF6}\u{5931}\u{8D25}: ${s.stderr}`);await i(`chmod 644 "${this.configPath}"`),await i(`chown system:system "${this.configPath}"`),console.log(`\u{914D}\u{7F6E}\u{6587}\u{4EF6}\u{5DF2}\u{6062}\u{590D}: ${t}`)}catch(e){throw console.error("恢复备份失败:",e),Error(`\u{6062}\u{590D}\u{5907}\u{4EFD}\u{5931}\u{8D25}: ${e.message}`)}}async cleanOldBackups(e=10){try{let t=await this.getBackupList();if(t.length<=e)return;for(let n of t.slice(e))await i(`rm -f "${n.path}"`),console.log(`\u{5DF2}\u{5220}\u{9664}\u{65E7}\u{5907}\u{4EFD}: ${n.filename}`)}catch(e){console.warn("清理旧备份时出现警告:",e.message)}}async getFileInfo(){try{if(!await this.checkConfigFileExists())return null;let e=await i(`stat "${this.configPath}"`);if(0!==e.errno)throw Error("获取文件信息失败");let t=e.stdout,n=t.match(/Size:\s+(\d+)/),r=t.match(/Modify:\s+([^\n]+)/);return{path:this.configPath,size:n?parseInt(n[1]):0,lastModified:r?r[1].trim():"Unknown",exists:!0}}catch(e){return console.error("获取文件信息失败:",e),null}}async validateFileIntegrity(e=null){try{let t=e||this.configPath,n=await i(`test -f "${t}" && test -s "${t}"`);if(0!==n.errno)return!1;let r=await i(`head -1 "${t}"`);if(0!==r.errno||!r.stdout.includes("<?xml"))return!1;return!0}catch(e){return console.error("文件完整性验证失败:",e),!1}}}class a{constructor(){this.currentSection="basic",this.searchTerm="",this.configData=null,this.bindEvents()}initializeUI(){this.setupNavigation(),this.setupSearch(),this.hideLoading()}setupNavigation(){document.querySelectorAll(".nav-link").forEach(e=>{e.addEventListener("click",t=>{t.preventDefault();let i=e.dataset.section;this.switchSection(i)})})}setupSearch(){let e=document.getElementById("search-input");e&&e.addEventListener("input",e=>{this.searchTerm=e.target.value.toLowerCase(),this.filterConfigItems()})}switchSection(e){document.querySelectorAll(".nav-link").forEach(e=>{e.classList.remove("active")});let t=document.querySelector(`[data-section="${e}"]`);t&&t.classList.add("active"),this.currentSection=e,this.renderCurrentSection()}renderCurrentSection(){if(!this.configData)return;let e=document.getElementById("config-container");if(e){switch(this.currentSection){case"basic":this.renderBasicConfig(e);break;case"screen":this.renderScreenConfig(e);break;case"freeze":this.renderFreezeConfig(e);break;case"proxy":this.renderProxyConfig(e);break;case"memory":this.renderMemoryConfig(e);break;case"cpu":this.renderCpuConfig(e);break;case"special":this.renderSpecialConfig(e);break;case"whitelist":this.renderWhitelistConfig(e);break;case"blacklist":this.renderBlacklistConfig(e);break;default:e.innerHTML="<p>未知的配置节</p>"}e.classList.remove("hidden")}}renderBasicConfig(e){if(!this.findConfigElement("enableConfig")){e.innerHTML="<p>未找到基础配置数据</p>";return}e.innerHTML=`
            <div class="config-section">
                <h2 class="config-section-title">\u{57FA}\u{7840}\u{5F00}\u{5173}\u{914D}\u{7F6E}</h2>
                <div class="config-items">
                    ${this.renderConfigItem("enableConfig","hansEnable","启用全局墓碑机制","控制整个墓碑系统的总开关","boolean")}
                    ${this.renderConfigItem("enableConfig","gmsEnable","GMS应用优化","对Google移动服务(GMS)应用启用优化","boolean")}
                    ${this.renderConfigItem("enableConfig","releaseStatistic","释放统计信息","收集并释放统计信息","boolean")}
                    ${this.renderConfigItem("enableConfig","skipToast","跳过Toast通知","冻结时跳过Toast通知避免唤醒","boolean")}
                    ${this.renderConfigItem("enableConfig","heatGameCloseNet","高温游戏断网","高温时是否关闭游戏网络","boolean")}
                    ${this.renderConfigItem("enableConfig","dozeRestrictSwitch","Doze模式限制","在Doze模式下启用限制开关","boolean")}
                    ${this.renderConfigItem("enableConfig","audioByHook","音频钩子拦截","通过钩子拦截音频事件减少唤醒","boolean")}
                    ${this.renderConfigItem("enableConfig","navigationByHook","导航钩子拦截","通过钩子拦截导航事件减少唤醒","boolean")}
                    ${this.renderConfigItem("enableConfig","audioCheckEnable","音频状态检查","启用音频状态检查","boolean")}
                    ${this.renderConfigItem("enableConfig","proxyWakeLockEnable","WakeLock代理","启用WakeLock代理机制","boolean")}
                    ${this.renderConfigItem("enableConfig","cgp_v2","CGP v2","使用第二代CGP功耗策略","boolean")}
                    ${this.renderConfigItem("enableConfig","hansWatchDogEnable","墓碑看门狗","启用墓碑看门狗监控","boolean")}
                    ${this.renderConfigItem("enableConfig","cpnCheckByHook","组件钩子检查","通过钩子检查组件状态","boolean")}
                    ${this.renderConfigItem("enableConfig","restoreAlarm","恢复闹钟","解冻时恢复闹钟功能","boolean")}
                    ${this.renderConfigItem("enableConfig","uidGoneRemoveAlarm","卸载移除闹钟","应用卸载时移除关联闹钟","boolean")}
                    ${this.renderConfigItem("enableConfig","MStateTrimMemConfig","M状态内存压缩","对M状态应用启用内存压缩","boolean")}
                </div>
            </div>
        `}renderScreenConfig(e){e.innerHTML=`
            <div class="config-section">
                <h2 class="config-section-title">\u{5C4F}\u{5E55}\u{72B6}\u{6001}\u{7B56}\u{7565}</h2>
                
                <h3 class="config-subsection-title">\u{7184}\u{5C4F}\u{914D}\u{7F6E}</h3>
                <div class="config-items">
                    ${this.renderConfigItem("lcdOffConfig","ffTotal","每次冻结数量","每次冻结的最大应用数","number","个")}
                    ${this.renderConfigItem("lcdOffConfig","ffInterval","冻结间隔","冻结尝试间隔时间","number","毫秒")}
                    ${this.renderConfigItem("lcdOffConfig","interval","检查间隔","常规检查间隔时间","number","毫秒")}
                    ${this.renderConfigItem("lcdOffConfig","deepSleepFreezeWhite","深度睡眠冻结白名单","深度睡眠时冻结白名单应用","boolean")}
                    ${this.renderConfigItem("lcdOffConfig","gameCloseNet","游戏断网","熄屏时是否关闭游戏网络","boolean")}
                    ${this.renderConfigItem("lcdOffConfig","idleEnable","空闲检测","启用空闲状态检测","boolean")}
                </div>
                
                <h3 class="config-subsection-title">\u{4EAE}\u{5C4F}\u{914D}\u{7F6E}</h3>
                <div class="config-items">
                    ${this.renderConfigItem("lcdOnConfig","RToM","Recent→M延迟","Recent状态到M状态的冻结延迟","number","毫秒")}
                    ${this.renderConfigItem("lcdOnConfig","MToF","M→Frozen延迟","M状态到Frozen状态的冻结延迟","number","毫秒")}
                    ${this.renderConfigItem("lcdOnConfig","checkImportance","重要性检查间隔","应用重要性检查间隔","number","毫秒")}
                    ${this.renderConfigItem("lcdOnConfig","gameCloseNet","游戏断网","亮屏时是否关闭游戏网络","boolean")}
                </div>
            </div>
        `}renderFreezeConfig(e){e.innerHTML=`
            <div class="config-section">
                <h2 class="config-section-title">\u{8FDB}\u{7A0B}\u{51BB}\u{7ED3}\u{89C4}\u{5219}</h2>
                
                <h3 class="config-subsection-title">\u{5FEB}\u{901F}\u{51BB}\u{7ED3}\u{914D}\u{7F6E}</h3>
                <div class="config-items">
                    ${this.renderConfigItem("ffConfig","enable","启用快速冻结","是否启用快速冻结功能","boolean")}
                    ${this.renderConfigItem("ffConfig","enterTimeout","进入超时","进入冻结状态的超时时间","number","毫秒")}
                    ${this.renderConfigItem("ffConfig","interval","冻结周期","快速冻结的执行周期","number","毫秒")}
                    ${this.renderConfigItem("ffConfig","maxFzNum","最大冻结数","单批次最大冻结应用数量","number","个")}
                </div>
            </div>
        `}renderProxyConfig(e){e.innerHTML='<div class="config-section"><h2>功耗代理机制</h2><p>此功能正在开发中...</p></div>'}renderMemoryConfig(e){e.innerHTML='<div class="config-section"><h2>内存优化</h2><p>此功能正在开发中...</p></div>'}renderCpuConfig(e){e.innerHTML='<div class="config-section"><h2>CPU管控</h2><p>此功能正在开发中...</p></div>'}renderSpecialConfig(e){e.innerHTML='<div class="config-section"><h2>特殊场景规则</h2><p>此功能正在开发中...</p></div>'}renderWhitelistConfig(e){e.innerHTML='<div class="config-section"><h2>白名单管理</h2><p>此功能正在开发中...</p></div>'}renderBlacklistConfig(e){e.innerHTML='<div class="config-section"><h2>黑名单管理</h2><p>此功能正在开发中...</p></div>'}renderConfigItem(e,t,i,n,r,s=""){let a=this.getConfigValue(e,t),o=`${e}.${t}`,l="";switch(r){case"boolean":l=`
                    <div class="switch-container">
                        <div class="switch">
                            <input type="checkbox" id="${o}" ${"true"===a?"checked":""} 
                                   onchange="handleConfigChange('${o}', this.checked ? 'true' : 'false')">
                            <span class="switch-slider"></span>
                        </div>
                    </div>
                `;break;case"number":l=`
                    <div class="number-input-container">
                        <input type="number" class="form-input number-input" id="${o}" 
                               value="${a||""}" 
                               onchange="handleConfigChange('${o}', this.value)">
                        ${s?`<span class="number-unit">${s}</span>`:""}
                    </div>
                `;break;case"string":l=`
                    <input type="text" class="form-input" id="${o}" 
                           value="${a||""}" 
                           onchange="handleConfigChange('${o}', this.value)">
                `}return`
            <div class="config-item" data-search="${i.toLowerCase()} ${n.toLowerCase()}">
                <div class="config-item-info">
                    <div class="config-item-title">${i}</div>
                    <div class="config-item-description">${n}</div>
                </div>
                <div class="config-item-control">
                    ${l}
                </div>
            </div>
        `}getConfigValue(e,t){if(!this.configData)return"";let i=this.findConfigElement(e);return i&&i.attributes&&i.attributes[t]||""}findConfigElement(e){return this.configData&&this.configData.children&&this.configData.children.find(t=>t.tagName===e)||null}filterConfigItems(){document.querySelectorAll(".config-item").forEach(e=>{let t=(e.dataset.search||"").includes(this.searchTerm);e.style.display=t?"flex":"none"})}setConfigData(e){this.configData=e,this.renderCurrentSection()}renderConfigSections(e){this.setConfigData(e)}showLoading(e="正在加载..."){let t=document.getElementById("loading"),i=t.querySelector("p");i&&(i.textContent=e),t.classList.remove("hidden"),document.getElementById("config-container").classList.add("hidden"),document.getElementById("error-message").classList.add("hidden")}hideLoading(){document.getElementById("loading").classList.add("hidden")}showError(e,t){let i=document.getElementById("error-message"),n=i.querySelector("h3"),r=document.getElementById("error-details");n&&(n.textContent=e),r&&(r.textContent=t),i.classList.remove("hidden"),document.getElementById("loading").classList.add("hidden"),document.getElementById("config-container").classList.add("hidden")}updateUnsavedIndicator(e){let t=document.getElementById("unsaved-changes");t&&(e?t.classList.remove("hidden"):t.classList.add("hidden"))}bindEvents(){window.handleConfigChange=(e,t)=>{let i=new CustomEvent("configChange",{detail:{path:e,value:t}});document.dispatchEvent(i)}}}class o{constructor(){this.parser=new DOMParser,this.serializer=new XMLSerializer}parse(e){try{let t=this.parser.parseFromString(e,"text/xml"),i=t.querySelector("parsererror");if(i)throw Error(`XML\u{89E3}\u{6790}\u{9519}\u{8BEF}: ${i.textContent}`);let n=t.documentElement;if(!n||"filter-conf"!==n.tagName)throw Error("无效的配置文件格式，缺少filter-conf根节点");let r=this.parseElement(n);return console.log("XML解析完成:",r),r}catch(e){throw console.error("XML解析失败:",e),Error(`XML\u{89E3}\u{6790}\u{5931}\u{8D25}: ${e.message}`)}}serialize(e){try{let t=document.implementation.createDocument(null,"filter-conf",null),i=t.documentElement;this.buildElement(t,i,e);let n=this.serializer.serializeToString(t);return n='<?xml version="1.0" encoding="utf-8"?>\n'+n,n=this.formatXML(n),console.log("XML序列化完成"),n}catch(e){throw console.error("XML序列化失败:",e),Error(`XML\u{5E8F}\u{5217}\u{5316}\u{5931}\u{8D25}: ${e.message}`)}}parseElement(e){let t={tagName:e.tagName,attributes:{},children:[],textContent:""};for(let i of e.attributes)t.attributes[i.name]=i.value;for(let i of e.childNodes)if(i.nodeType===Node.ELEMENT_NODE)t.children.push(this.parseElement(i));else if(i.nodeType===Node.TEXT_NODE){let e=i.textContent.trim();e&&(t.textContent+=e)}return t}buildElement(e,t,i){if(i.attributes)for(let[e,n]of Object.entries(i.attributes))t.setAttribute(e,n);if(i.textContent&&(t.textContent=i.textContent),i.children&&i.children.length>0)for(let n of i.children){let i=e.createElement(n.tagName);t.appendChild(i),this.buildElement(e,i,n)}}formatXML(e){let t=[];e=e.replace(/(>)(<)(\/*)/g,"$1\n$2$3");let i=0;return e.split("\n").forEach(e=>{let n=0;e.match(/.+<\/\w[^>]*>$/)?n=0:e.match(/^<\/\w/)?0!==i&&(i-=1):n=+!!e.match(/^<\w[^>]*[^\/]>.*$/);let r="    ".repeat(i);t.push(r+e),i+=n}),t.join("\n")}getValueByPath(e,t){let i=t.split("."),n=e;for(let e of i)if(e.includes("[")&&e.includes("]")){let[t,i]=e.split("["),r=parseInt(i.replace("]",""));n=n[t]&&n[t][r]}else if(n&&n.children){let t=n.children.find(t=>t.tagName===e);if(t)n=t;else if(n.attributes&&void 0!==n.attributes[e])return n.attributes[e];else return}else if(n&&n.attributes&&void 0!==n.attributes[e])return n.attributes[e];else return;return n}setValueByPath(e,t,i){let n=t.split("."),r=e;for(let e=0;e<n.length-1;e++){let t=n[e];if(t.includes("[")&&t.includes("]")){let[e,i]=t.split("["),n=parseInt(i.replace("]",""));r=r[e]&&r[e][n]}else if(r&&r.children){let e=r.children.find(e=>e.tagName===t);e||(e={tagName:t,attributes:{},children:[],textContent:""},r.children.push(e)),r=e}}let s=n[n.length-1];r&&void 0!==r.attributes&&(r.attributes[s]=i)}findElementsByTagName(e,t){let i=[],n=e=>{e.tagName===t&&i.push(e),e.children&&e.children.forEach(n)};return n(e),i}validateStructure(e){let t=[],i=[];if(!e||"filter-conf"!==e.tagName)return t.push("缺少有效的filter-conf根节点"),{isValid:!1,errors:t,warnings:i};for(let t of["version","filter-name","enableConfig","lcdOffConfig","lcdOnConfig"])0===this.findElementsByTagName(e,t).length&&i.push(`\u{7F3A}\u{5C11}\u{63A8}\u{8350}\u{7684}\u{914D}\u{7F6E}\u{8282}\u{70B9}: ${t}`);return{isValid:0===t.length,errors:t,warnings:i}}}class l{constructor(){this.validationRules=this.initializeValidationRules()}initializeValidationRules(){return{enableConfig:{required:!0,attributes:{hansEnable:{type:"boolean",required:!0},gmsEnable:{type:"boolean",required:!0},releaseStatistic:{type:"boolean",required:!0},skipToast:{type:"boolean",required:!0},heatGameCloseNet:{type:"boolean",required:!0},dozeRestrictSwitch:{type:"boolean",required:!0},audioByHook:{type:"boolean",required:!0},navigationByHook:{type:"boolean",required:!0},audioCheckEnable:{type:"boolean",required:!0},proxyWakeLockEnable:{type:"boolean",required:!0},cgp_v2:{type:"boolean",required:!0},hansWatchDogEnable:{type:"boolean",required:!0},cpnCheckByHook:{type:"boolean",required:!0},restoreAlarm:{type:"boolean",required:!0},uidGoneRemoveAlarm:{type:"boolean",required:!0},MStateTrimMemConfig:{type:"boolean",required:!0}}},lcdOffConfig:{required:!0,attributes:{ffTotal:{type:"number",min:1,max:50,required:!0},ffInterval:{type:"number",min:1e3,max:6e4,required:!0},interval:{type:"number",min:1e4,max:3e5,required:!0},deepSleepFreezeWhite:{type:"boolean",required:!0},gameCloseNet:{type:"boolean",required:!0},idleEnable:{type:"boolean",required:!0}}},lcdOnConfig:{required:!0,attributes:{RToM:{type:"number",min:5e3,max:6e4,required:!0},MToF:{type:"number",min:2e3,max:3e4,required:!0},checkImportance:{type:"number",min:5e3,max:6e4,required:!0},gameCloseNet:{type:"boolean",required:!0}}},ffConfig:{required:!0,attributes:{enable:{type:"boolean",required:!0},enterTimeout:{type:"number",min:50,max:1e3,required:!0},interval:{type:"number",min:5e3,max:3e4,required:!0},maxFzNum:{type:"number",min:1,max:50,required:!0}}}}}validateConfig(e){let t=[],i=[];try{if(!e||"filter-conf"!==e.tagName)return t.push("配置文件缺少有效的filter-conf根节点"),{isValid:!1,errors:t,warnings:i};for(let[n,r]of Object.entries(this.validationRules)){let s=this.validateSection(e,n,r);t.push(...s.errors),i.push(...s.warnings)}let n=this.validateVersion(e);return i.push(...n.warnings),{isValid:0===t.length,errors:t,warnings:i}}catch(e){return console.error("配置验证过程中发生错误:",e),t.push(`\u{9A8C}\u{8BC1}\u{8FC7}\u{7A0B}\u{4E2D}\u{53D1}\u{751F}\u{9519}\u{8BEF}: ${e.message}`),{isValid:!1,errors:t,warnings:i}}}validateSection(e,t,i){let n=[],r=[],s=this.findConfigElement(e,t);if(!s)return i.required?n.push(`\u{7F3A}\u{5C11}\u{5FC5}\u{9700}\u{7684}\u{914D}\u{7F6E}\u{8282}: ${t}`):r.push(`\u{7F3A}\u{5C11}\u{53EF}\u{9009}\u{7684}\u{914D}\u{7F6E}\u{8282}: ${t}`),{errors:n,warnings:r};if(i.attributes)for(let[e,a]of Object.entries(i.attributes)){let i=this.validateAttribute(s,e,a,t);n.push(...i.errors),r.push(...i.warnings)}return{errors:n,warnings:r}}validateAttribute(e,t,i,n){let r=[],s=[],a=e.attributes?e.attributes[t]:void 0;if(i.required&&(void 0===a||""===a))return r.push(`${n}.${t}: \u{7F3A}\u{5C11}\u{5FC5}\u{9700}\u{7684}\u{5C5E}\u{6027}`),{errors:r,warnings:s};if(void 0===a||""===a)return{errors:r,warnings:s};switch(i.type){case"boolean":"true"!==a&&"false"!==a&&r.push(`${n}.${t}: \u{503C}\u{5FC5}\u{987B}\u{662F}'true'\u{6216}'false'\u{FF0C}\u{5F53}\u{524D}\u{503C}: ${a}`);break;case"number":let o=parseInt(a);isNaN(o)?r.push(`${n}.${t}: \u{503C}\u{5FC5}\u{987B}\u{662F}\u{6570}\u{5B57}\u{FF0C}\u{5F53}\u{524D}\u{503C}: ${a}`):(void 0!==i.min&&o<i.min&&r.push(`${n}.${t}: \u{503C}\u{4E0D}\u{80FD}\u{5C0F}\u{4E8E}${i.min}\u{FF0C}\u{5F53}\u{524D}\u{503C}: ${o}`),void 0!==i.max&&o>i.max&&r.push(`${n}.${t}: \u{503C}\u{4E0D}\u{80FD}\u{5927}\u{4E8E}${i.max}\u{FF0C}\u{5F53}\u{524D}\u{503C}: ${o}`),void 0!==i.recommendedMin&&o<i.recommendedMin&&s.push(`${n}.${t}: \u{5EFA}\u{8BAE}\u{503C}\u{4E0D}\u{5C0F}\u{4E8E}${i.recommendedMin}\u{FF0C}\u{5F53}\u{524D}\u{503C}: ${o}`),void 0!==i.recommendedMax&&o>i.recommendedMax&&s.push(`${n}.${t}: \u{5EFA}\u{8BAE}\u{503C}\u{4E0D}\u{5927}\u{4E8E}${i.recommendedMax}\u{FF0C}\u{5F53}\u{524D}\u{503C}: ${o}`));break;case"string":"string"!=typeof a?r.push(`${n}.${t}: \u{503C}\u{5FC5}\u{987B}\u{662F}\u{5B57}\u{7B26}\u{4E32}\u{FF0C}\u{5F53}\u{524D}\u{7C7B}\u{578B}: ${typeof a}`):(void 0!==i.minLength&&a.length<i.minLength&&r.push(`${n}.${t}: \u{5B57}\u{7B26}\u{4E32}\u{957F}\u{5EA6}\u{4E0D}\u{80FD}\u{5C0F}\u{4E8E}${i.minLength}`),void 0!==i.maxLength&&a.length>i.maxLength&&r.push(`${n}.${t}: \u{5B57}\u{7B26}\u{4E32}\u{957F}\u{5EA6}\u{4E0D}\u{80FD}\u{5927}\u{4E8E}${i.maxLength}`),i.pattern&&!i.pattern.test(a)&&r.push(`${n}.${t}: \u{503C}\u{683C}\u{5F0F}\u{4E0D}\u{6B63}\u{786E}`))}return{errors:r,warnings:s}}validateVersion(e){let t=[],i=this.findConfigElement(e,"version");if(!i)return t.push("缺少版本信息"),{warnings:t};let n=i.textContent;return n&&""!==n.trim()?/^\d{10}$/.test(n.trim())||t.push(`\u{7248}\u{672C}\u{683C}\u{5F0F}\u{53EF}\u{80FD}\u{4E0D}\u{6B63}\u{786E}: ${n}`):t.push("版本信息为空"),{warnings:t}}validateValue(e,t,i){let n=this.validationRules[e];if(!n||!n.attributes||!n.attributes[t])return{isValid:!1,error:"未知的配置项"};let r=n.attributes[t],s=this.validateAttribute({attributes:{[t]:i}},t,r,e);return{isValid:0===s.errors.length,error:s.errors[0]||null,warning:s.warnings[0]||null}}checkCompatibility(e){let t=[],i=this.findConfigElement(e,"enableConfig");if(i&&i.attributes){let e=i.attributes;"false"===e.audioByHook&&"true"===e.audioCheckEnable&&t.push("音频钩子拦截已禁用，但音频状态检查仍启用，可能导致功能冲突"),"false"===e.proxyWakeLockEnable&&"true"===e.cgp_v2&&t.push("WakeLock代理已禁用，但CGP v2仍启用，可能影响功耗优化效果")}let n=this.findConfigElement(e,"lcdOffConfig"),r=this.findConfigElement(e,"lcdOnConfig");if(n&&r){let e=parseInt(n.attributes?.ffInterval||"0"),i=parseInt(r.attributes?.RToM||"0");e>0&&i>0&&e>i&&t.push("熄屏冻结间隔大于亮屏Recent→M延迟，可能导致策略冲突")}return{warnings:t}}findConfigElement(e,t){return e&&e.children&&e.children.find(e=>e.tagName===t)||null}validateRealTime(e,t,i,n){let r=this.validateValue(e,t,i);n.classList.remove("input-valid","input-invalid");let s=n.parentNode.querySelector(".validation-error");if(s&&s.remove(),r.isValid){if(n.classList.add("input-valid"),r.warning){let e=document.createElement("div");e.className="validation-warning",e.textContent=r.warning,n.parentNode.appendChild(e)}return!0}{n.classList.add("input-invalid");let e=document.createElement("div");return e.className="validation-error",e.textContent=r.error,n.parentNode.appendChild(e),!1}}validateForm(e){let t=[],i=[],n=!0;return e.querySelectorAll("[data-config-path]").forEach(e=>{let r=e.dataset.configPath,[s,a]=r.split("."),o="checkbox"===e.type?e.checked?"true":"false":e.value,l=this.validateValue(s,a,o);l.isValid||(t.push(`${r}: ${l.error}`),n=!1),l.warning&&i.push(`${r}: ${l.warning}`)}),{isValid:n,errors:t,warnings:i}}displayValidationResult(e,t){if(t.innerHTML="",e.isValid){let e=document.createElement("div");e.className="validation-success",e.innerHTML='<span class="icon">✅</span> 配置验证通过',t.appendChild(e)}else{let i=document.createElement("div");i.className="validation-errors",i.innerHTML=`
                <div class="validation-header">
                    <span class="icon">\u{274C}</span> \u{53D1}\u{73B0} ${e.errors.length} \u{4E2A}\u{9519}\u{8BEF}
                </div>
                <ul class="validation-list">
                    ${e.errors.map(e=>`<li>${e}</li>`).join("")}
                </ul>
            `,t.appendChild(i)}if(e.warnings.length>0){let i=document.createElement("div");i.className="validation-warnings",i.innerHTML=`
                <div class="validation-header">
                    <span class="icon">\u{26A0}\u{FE0F}</span> ${e.warnings.length} \u{4E2A}\u{8B66}\u{544A}
                </div>
                <ul class="validation-list">
                    ${e.warnings.map(e=>`<li>${e}</li>`).join("")}
                </ul>
            `,t.appendChild(i)}}createValidationSummary(e){return{isValid:e.isValid,errorCount:e.errors.length,warningCount:e.warnings.length,status:e.isValid?"valid":"invalid",message:e.isValid?"配置验证通过":`\u{53D1}\u{73B0} ${e.errors.length} \u{4E2A}\u{9519}\u{8BEF}`,details:{errors:e.errors,warnings:e.warnings}}}generateReport(e){let t="配置验证报告\n";return t+="================\n\n",e.isValid?t+="✅ 配置验证通过\n\n":(t+="❌ 配置验证失败\n\n",e.errors.length>0&&(t+="错误:\n",e.errors.forEach((e,i)=>{t+=`${i+1}. ${e}
`}),t+="\n")),e.warnings.length>0&&(t+="警告:\n",e.warnings.forEach((e,i)=>{t+=`${i+1}. ${e}
`})),t}exportValidationResult(e){return JSON.stringify(this.createValidationSummary(e),null,2)}}class u{constructor(){this.container=null,this.toasts=new Map,this.autoCloseDelay=5e3,this.maxToasts=5,this.initializeContainer()}initializeContainer(){this.container=document.getElementById("toast-container"),this.container||console.warn("Toast容器未找到")}showSuccess(e,t,i=this.autoCloseDelay){this.showToast("success",e,t,i)}showError(e,t,i=2*this.autoCloseDelay){this.showToast("error",e,t,i)}showWarning(e,t,i=this.autoCloseDelay){this.showToast("warning",e,t,i)}showInfo(e,t,i=this.autoCloseDelay){this.showToast("info",e,t,i)}showToast(e,t,i,n=this.autoCloseDelay){if(!this.container)return void console.warn("Toast容器未初始化");if(this.toasts.size>=this.maxToasts){let e=this.toasts.keys().next().value;this.removeToast(e)}let r=`toast-${Date.now()}-${Math.random().toString(36).substr(2,9)}`,s=this.createToastElement(r,e,t,i);this.container.appendChild(s),this.toasts.set(r,{element:s,type:e,title:t,message:i,createdAt:Date.now()}),setTimeout(()=>{s.classList.add("toast-show")},10),n>0&&setTimeout(()=>{this.removeToast(r)},n);let a=s.querySelector(".toast-close");return a&&a.addEventListener("click",()=>{this.removeToast(r)}),console.log(`Toast\u{663E}\u{793A}: [${e.toUpperCase()}] ${t} - ${i}`),r}createToastElement(e,t,i,n){let r=document.createElement("div");r.id=e,r.className=`toast toast-${t}`;let s={success:"✅",error:"❌",warning:"⚠️",info:"ℹ️"},a=s[t]||s.info;return r.innerHTML=`
            <div class="toast-content">
                <div class="toast-icon">${a}</div>
                <div class="toast-body">
                    <div class="toast-title">${this.escapeHtml(i)}</div>
                    <div class="toast-message">${this.escapeHtml(n)}</div>
                </div>
                <button class="toast-close" type="button" aria-label="\u{5173}\u{95ED}">\xd7</button>
            </div>
            <div class="toast-progress">
                <div class="toast-progress-bar"></div>
            </div>
        `,r}removeToast(e){let t=this.toasts.get(e);if(!t)return;let i=t.element;i.classList.add("toast-removing"),setTimeout(()=>{i.parentNode&&i.parentNode.removeChild(i),this.toasts.delete(e)},300)}clearAll(){Array.from(this.toasts.keys()).forEach(e=>this.removeToast(e))}clearByType(e){Array.from(this.toasts.entries()).filter(([t,i])=>i.type===e).map(([e,t])=>e).forEach(e=>this.removeToast(e))}getToastCount(){return this.toasts.size}getToastCountByType(e){return Array.from(this.toasts.values()).filter(t=>t.type===e).length}setMaxToasts(e){for(this.maxToasts=Math.max(1,e);this.toasts.size>this.maxToasts;){let e=this.toasts.keys().next().value;this.removeToast(e)}}setAutoCloseDelay(e){this.autoCloseDelay=Math.max(1e3,e)}escapeHtml(e){let t=document.createElement("div");return t.textContent=e,t.innerHTML}showLoading(e="正在处理..."){let t=`loading-${Date.now()}`,i=document.createElement("div");return i.id=t,i.className="toast toast-loading",i.innerHTML=`
            <div class="toast-content">
                <div class="toast-icon">
                    <div class="loading-spinner-small"></div>
                </div>
                <div class="toast-body">
                    <div class="toast-message">${this.escapeHtml(e)}</div>
                </div>
            </div>
        `,this.container.appendChild(i),setTimeout(()=>{i.classList.add("toast-show")},10),this.toasts.set(t,{element:i,type:"loading",title:"",message:e,createdAt:Date.now()}),t}updateLoadingMessage(e,t){let i=this.toasts.get(e);if(i&&"loading"===i.type){let e=i.element.querySelector(".toast-message");e&&(e.textContent=t)}}showResult(e,t,i,n=null){n&&this.removeToast(n),e?this.showSuccess("操作成功",t):this.showError("操作失败",i)}}class c{constructor(){this.overlay=null,this.modal=null,this.isOpen=!1,this.currentResolve=null,this.initializeModal(),this.bindEvents()}initializeModal(){this.overlay=document.getElementById("modal-overlay"),this.modal=this.overlay?.querySelector(".modal"),this.overlay&&this.modal||console.warn("模态对话框元素未找到")}bindEvents(){if(!this.overlay)return;this.overlay.addEventListener("click",e=>{e.target===this.overlay&&this.close(!1)});let e=document.getElementById("modal-close");e&&e.addEventListener("click",()=>{this.close(!1)});let t=document.getElementById("modal-cancel");t&&t.addEventListener("click",()=>{this.close(!1)});let i=document.getElementById("modal-confirm");i&&i.addEventListener("click",()=>{this.close(!0)}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isOpen&&this.close(!1)})}showConfirm(e,t,i="确认",n="info"){return new Promise(r=>{if(this.isOpen)return void r(!1);this.currentResolve=r,this.updateContent(e,t,i,n),this.open()})}showInfo(e,t,i="确定"){return this.showConfirm(e,t,i,"info")}showWarning(e,t,i="继续"){return this.showConfirm(e,t,i,"warning")}showDanger(e,t,i="删除"){return this.showConfirm(e,t,i,"danger")}showCustom(e){let{title:t="确认",message:i="",confirmText:n="确认",cancelText:r="取消",type:s="info",showCancel:a=!0,html:o=null}=e;return new Promise(e=>{if(this.isOpen)return void e(!1);this.currentResolve=e,this.updateContent(t,o||i,n,s,r,a),this.open()})}updateContent(e,t,i,n,r="取消",s=!0){if(!this.modal)return;let a=document.getElementById("modal-title");a&&(a.textContent=e);let o=document.getElementById("modal-message");o&&(t.includes("<")?o.innerHTML=t:o.textContent=t);let l=document.getElementById("modal-confirm"),u=document.getElementById("modal-cancel");if(l)switch(l.textContent=i,l.className="btn",n){case"warning":l.classList.add("btn-warning");break;case"danger":l.classList.add("btn-danger");break;default:l.classList.add("btn-primary")}u&&(u.textContent=r,u.style.display=s?"inline-flex":"none"),this.modal.className=`modal modal-${n}`}open(){this.overlay&&!this.isOpen&&(this.isOpen=!0,this.overlay.classList.remove("hidden"),document.body.style.overflow="hidden",setTimeout(()=>{let e=document.getElementById("modal-confirm");e&&e.focus()},100),console.log("模态对话框已打开"))}close(e=!1){this.overlay&&this.isOpen&&(this.isOpen=!1,this.overlay.classList.add("hidden"),document.body.style.overflow="",this.currentResolve&&(this.currentResolve(e),this.currentResolve=null),console.log(`\u{6A21}\u{6001}\u{5BF9}\u{8BDD}\u{6846}\u{5DF2}\u{5173}\u{95ED}\u{FF0C}\u{7ED3}\u{679C}: ${e}`))}showInput(e,t,i="",n=""){return new Promise(r=>{if(this.isOpen)return void r(null);let s=`
                <p>${this.escapeHtml(t)}</p>
                <div class="form-group">
                    <input type="text" id="modal-input" class="form-input" 
                           value="${this.escapeHtml(i)}" 
                           placeholder="${this.escapeHtml(n)}">
                </div>
            `;this.currentResolve=e=>{if(e){let e=document.getElementById("modal-input");r(e?e.value:null)}else r(null)},this.updateContent(e,s,"确定","info"),this.open(),setTimeout(()=>{let e=document.getElementById("modal-input");e&&(e.focus(),e.select())},100)})}showSelect(e,t,i){return new Promise(n=>{if(this.isOpen)return void n(null);let r=i.map((e,t)=>{let i="object"==typeof e?e.value:e,n="object"==typeof e?e.label:e;return`<option value="${this.escapeHtml(i)}">${this.escapeHtml(n)}</option>`}).join(""),s=`
                <p>${this.escapeHtml(t)}</p>
                <div class="form-group">
                    <select id="modal-select" class="form-input form-select">
                        ${r}
                    </select>
                </div>
            `;this.currentResolve=e=>{if(e){let e=document.getElementById("modal-select");n(e?e.value:null)}else n(null)},this.updateContent(e,s,"确定","info"),this.open(),setTimeout(()=>{let e=document.getElementById("modal-select");e&&e.focus()},100)})}isModalOpen(){return this.isOpen}forceClose(){this.close(!1)}escapeHtml(e){let t=document.createElement("div");return t.textContent=e,t.innerHTML}}const d=new class{constructor(){this.isInitialized=!1,this.configData=null,this.hasUnsavedChanges=!1,this.configManager=new e,this.fileManager=new s,this.uiManager=new a,this.xmlParser=new o,this.validationManager=new l,this.toastManager=new u,this.modalManager=new c,this.bindEvents()}async init(){try{if(console.log("正在初始化ColorOS墓碑配置编辑器..."),this.uiManager.showLoading("正在初始化应用..."),!await this.fileManager.checkAPIAvailable())throw Error("KernelSU API不可用，请确保在KernelSU环境中运行");await this.loadConfiguration(),this.uiManager.initializeUI(),this.uiManager.setConfigData(this.configData),this.uiManager.hideLoading(),this.isInitialized=!0,this.toastManager.showSuccess("应用初始化成功","配置文件已加载完成"),console.log("应用初始化完成")}catch(e){console.error("应用初始化失败:",e),this.uiManager.showError("初始化失败",e.message),this.toastManager.showError("初始化失败",e.message)}}async loadConfiguration(){try{this.uiManager.showLoading("正在读取配置文件...");let e=await this.fileManager.readConfigFile();this.configData=this.xmlParser.parse(e);let t=this.validationManager.validateConfig(this.configData);t.isValid||(console.warn("配置文件验证警告:",t.warnings),this.toastManager.showWarning("配置文件警告","发现一些配置项可能存在问题")),this.updateFileStatus(),console.log("配置文件加载成功")}catch(e){throw Error(`\u{914D}\u{7F6E}\u{6587}\u{4EF6}\u{52A0}\u{8F7D}\u{5931}\u{8D25}: ${e.message}`)}}async saveConfiguration(){try{if(!this.configData)throw Error("没有可保存的配置数据");if(!await this.modalManager.showConfirm("保存配置","确定要保存当前配置吗？这将覆盖系统中的配置文件。","保存","warning"))return;this.uiManager.showLoading("正在保存配置文件...");let e=this.validationManager.validateConfig(this.configData);if(!e.isValid&&e.errors.length>0)throw Error(`\u{914D}\u{7F6E}\u{9A8C}\u{8BC1}\u{5931}\u{8D25}: ${e.errors.join(", ")}`);let t=this.xmlParser.serialize(this.configData);await this.fileManager.writeConfigFile(t),this.hasUnsavedChanges=!1,this.updateFileStatus(),this.uiManager.updateUnsavedIndicator(!1),this.uiManager.hideLoading(),this.toastManager.showSuccess("保存成功","配置文件已成功保存到系统"),console.log("配置文件保存成功")}catch(e){this.uiManager.hideLoading(),console.error("保存配置失败:",e),this.toastManager.showError("保存失败",e.message)}}async backupConfiguration(){try{this.uiManager.showLoading("正在创建备份...");let e=await this.fileManager.createBackup();this.uiManager.hideLoading(),this.toastManager.showSuccess("备份成功",`\u{5907}\u{4EFD}\u{6587}\u{4EF6}\u{5DF2}\u{4FDD}\u{5B58}\u{5230}: ${e}`)}catch(e){this.uiManager.hideLoading(),console.error("备份失败:",e),this.toastManager.showError("备份失败",e.message)}}async restoreConfiguration(){try{if(!await this.modalManager.showConfirm("恢复配置","确定要恢复到备份的配置吗？当前的修改将会丢失。","恢复","warning"))return;this.uiManager.showLoading("正在恢复配置..."),await this.fileManager.restoreBackup(),await this.loadConfiguration(),this.uiManager.renderConfigSections(this.configData),this.uiManager.hideLoading(),this.toastManager.showSuccess("恢复成功","配置已恢复到备份状态")}catch(e){this.uiManager.hideLoading(),console.error("恢复失败:",e),this.toastManager.showError("恢复失败",e.message)}}onConfigChange(e,t){try{this.configManager.updateValue(this.configData,e,t),this.hasUnsavedChanges=!0,this.uiManager.updateUnsavedIndicator(!0),console.log(`\u{914D}\u{7F6E}\u{9879}\u{5DF2}\u{66F4}\u{65B0}: ${e} = ${t}`)}catch(e){console.error("配置更新失败:",e),this.toastManager.showError("更新失败",e.message)}}updateFileStatus(){let e=document.getElementById("file-status"),t=document.getElementById("last-modified");e&&(e.textContent="配置文件: 已加载"),t&&(t.textContent=`\u{6700}\u{540E}\u{4FEE}\u{6539}: ${new Date().toLocaleString()}`)}bindEvents(){document.addEventListener("DOMContentLoaded",()=>{this.init()}),document.addEventListener("click",e=>{let t=e.target;"save-btn"===t.id||t.closest("#save-btn")?(e.preventDefault(),this.saveConfiguration()):"backup-btn"===t.id||t.closest("#backup-btn")?(e.preventDefault(),this.backupConfiguration()):"restore-btn"===t.id||t.closest("#restore-btn")?(e.preventDefault(),this.restoreConfiguration()):("retry-btn"===t.id||t.closest("#retry-btn"))&&(e.preventDefault(),this.init())}),document.addEventListener("configChange",e=>{this.onConfigChange(e.detail.path,e.detail.value)}),window.addEventListener("beforeunload",e=>{if(this.hasUnsavedChanges)return e.preventDefault(),e.returnValue="您有未保存的更改，确定要离开吗？",e.returnValue}),document.addEventListener("keydown",e=>{if(e.ctrlKey||e.metaKey)switch(e.key){case"s":e.preventDefault(),this.saveConfiguration();break;case"b":e.preventDefault(),this.backupConfiguration()}})}};window.tombstoneEditor=d,console.log("ColorOS墓碑配置编辑器已加载");